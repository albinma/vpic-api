openapi: '3.0.3'
info:
  title: 'vPIC API'
  version: '1.0.0'
  description: 'API for NHTSA vPIC database'
servers:
  - url: http://localhost:8080/api/v1
    description: Development
  - url: https://unknown.com/api/v1
    description: Production
paths:
  /years:
    get:
      summary: Get a list of supported vehicle years
      operationId: getYears
      responses:
        '200':
          description: Vehicle years found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetYearsResponseBody'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
  /makes:
    get:
      summary: Get a list of supported vehicle makes
      operationId: getMakes
      parameters:
        - name: year
          in: query
          description: The year of the vehicle
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Vehicle makes found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lookup'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
components:
  responses:
    '400':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ValidationProblem'
      description: Request cannot be processed due to malformed request syntax
    '401':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to authentication failure
    '403':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to authorization failure
    '404':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to resource not found
    '422':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was formed correctly but errors ocurred during processing
    '500':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to an internal server error

  schemas:
    GetYearsResponseBody:
      type: array
      description: 'A list of vehicle years'
      additionalProperties: false
      items:
        type: integer
        format: int32
      example: [2000, 2001, 2002]
    Lookup:
      type: object
      additionalProperties: false
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int32
          description: The unique identifier for a lookup
        name:
          type: string
          description: The name of the lookup
    Problem:
      description: A Problem Details object (RFC 9457)
      type: object
      additionalProperties: true
      required:
        - type
        - title
        - status
      properties:
        type:
          type: string
          description: URI reference that identifies the problem type
          default: about:blank
        status:
          type: integer
          format: int32
          description: HTTP status code generated by the origin server for this occurrence of the problem
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
        title:
          type: string
          description: A short, human-readable summary of the problem type
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          format: uri
          description: URI reference that identifies the specific occurrence of the problem
    ValidationProblem:
      type: object
      allOf:
        - $ref: '#/components/schemas/Problem'
      properties:
        errors:
          type: array
          description: A list of validation errors
          items:
            $ref: '#/components/schemas/ValidationError'
      example:
        type: about:blank
        status: 400
        title: One or more validation errors occurred
        errors:
          - name: publicAddress
            reason: Public address is required
          - name: signature
            reason: Signature is required
    ValidationError:
      type: object
      properties:
        name:
          type: string
          description: The name of the field that caused the error
        reason:
          type: string
          description: The reason why the field caused the error
